// <auto-generated />
using System;
using MeteringTest.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MeteringTest.Migrations
{
    [DbContext(typeof(MeteringDbContext))]
    [Migration("20230820163800_AddMaterializedView")]
    partial class AddMaterializedView
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeteringTest.Database.Models.ApiUsage", b =>
            {
                b.Property<string>("ContextIdentifier")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<double>("CpuTime")
                    .HasColumnType("double precision");

                b.Property<DateTimeOffset>("Time")
                    .HasColumnType("timestamp with time zone");

                b.ToTable("ApiUsages");
            });

            modelBuilder.Entity("MeteringTest.Database.Models.ApiUsageMinutely", b =>
            {
                b.Property<string>("ContextIdentifier")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<double>("CpuTime")
                    .HasColumnType("double precision");

                b.Property<DateTimeOffset>("Time")
                    .HasColumnType("timestamp with time zone");

                b.ToTable("ApiUsageSummaryMinutely");
            });
#pragma warning restore 612, 618
        }
    }
}
